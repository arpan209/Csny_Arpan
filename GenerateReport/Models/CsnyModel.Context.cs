//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GenerateReport.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PdfReportCsnyEntities : DbContext
    {
        public PdfReportCsnyEntities()
            : base("name=PdfReportCsnyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<FundingCodeMaster> FundingCodeMasters { get; set; }
        public DbSet<MandateMaster> MandateMasters { get; set; }
        public DbSet<StudentMaster> StudentMasters { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<AgencyMaster> AgencyMasters { get; set; }
        public DbSet<SessionDetail> SessionDetails { get; set; }
        public DbSet<SessionNotPDetail> SessionNotPDetails { get; set; }
        public DbSet<StagingTable> StagingTables { get; set; }
        public DbSet<ZipCode> ZipCodes { get; set; }
        public DbSet<vw_CurrentTherapists> vw_CurrentTherapists { get; set; }
        public DbSet<TherapistMaster> TherapistMasters { get; set; }
    
        public virtual int AddStaging(string fiscal, string nPI, string nYCID, string lastName, string firstName, string frequency, string groupSize, string duration, string language, string fundingCode, string startDate, string endDate)
        {
            var fiscalParameter = fiscal != null ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var nYCIDParameter = nYCID != null ?
                new ObjectParameter("NYCID", nYCID) :
                new ObjectParameter("NYCID", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var frequencyParameter = frequency != null ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(string));
    
            var groupSizeParameter = groupSize != null ?
                new ObjectParameter("GroupSize", groupSize) :
                new ObjectParameter("GroupSize", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("language", language) :
                new ObjectParameter("language", typeof(string));
    
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStaging", fiscalParameter, nPIParameter, nYCIDParameter, lastNameParameter, firstNameParameter, frequencyParameter, groupSizeParameter, durationParameter, languageParameter, fundingCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int AddStudent(string payType, string referral, string pFirstName, string pLastName, string address1, string pHomePh, string pOfficePh, string pMobilPh, string pEmail, string gName, string gEmail, string gMobilPh, string nYCID, string location, string firstName, string lastName, string dOB, string serviceType, string diagnosis, string parentReport, string comments)
        {
            var payTypeParameter = payType != null ?
                new ObjectParameter("PayType", payType) :
                new ObjectParameter("PayType", typeof(string));
    
            var referralParameter = referral != null ?
                new ObjectParameter("Referral", referral) :
                new ObjectParameter("Referral", typeof(string));
    
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("PFirstName", pFirstName) :
                new ObjectParameter("PFirstName", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("PLastName", pLastName) :
                new ObjectParameter("PLastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var pHomePhParameter = pHomePh != null ?
                new ObjectParameter("PHomePh", pHomePh) :
                new ObjectParameter("PHomePh", typeof(string));
    
            var pOfficePhParameter = pOfficePh != null ?
                new ObjectParameter("POfficePh", pOfficePh) :
                new ObjectParameter("POfficePh", typeof(string));
    
            var pMobilPhParameter = pMobilPh != null ?
                new ObjectParameter("PMobilPh", pMobilPh) :
                new ObjectParameter("PMobilPh", typeof(string));
    
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("PEmail", pEmail) :
                new ObjectParameter("PEmail", typeof(string));
    
            var gNameParameter = gName != null ?
                new ObjectParameter("GName", gName) :
                new ObjectParameter("GName", typeof(string));
    
            var gEmailParameter = gEmail != null ?
                new ObjectParameter("GEmail", gEmail) :
                new ObjectParameter("GEmail", typeof(string));
    
            var gMobilPhParameter = gMobilPh != null ?
                new ObjectParameter("GMobilPh", gMobilPh) :
                new ObjectParameter("GMobilPh", typeof(string));
    
            var nYCIDParameter = nYCID != null ?
                new ObjectParameter("NYCID", nYCID) :
                new ObjectParameter("NYCID", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(string));
    
            var diagnosisParameter = diagnosis != null ?
                new ObjectParameter("Diagnosis", diagnosis) :
                new ObjectParameter("Diagnosis", typeof(string));
    
            var parentReportParameter = parentReport != null ?
                new ObjectParameter("ParentReport", parentReport) :
                new ObjectParameter("ParentReport", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudent", payTypeParameter, referralParameter, pFirstNameParameter, pLastNameParameter, address1Parameter, pHomePhParameter, pOfficePhParameter, pMobilPhParameter, pEmailParameter, gNameParameter, gEmailParameter, gMobilPhParameter, nYCIDParameter, locationParameter, firstNameParameter, lastNameParameter, dOBParameter, serviceTypeParameter, diagnosisParameter, parentReportParameter, commentsParameter);
        }
    
        public virtual int AddTherapist(string firstName, string lastName, string address1, string address2, string city, string state, string email, string phone, string dateofRegistration, string lastLoginDate, string userName, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var dateofRegistrationParameter = dateofRegistration != null ?
                new ObjectParameter("DateofRegistration", dateofRegistration) :
                new ObjectParameter("DateofRegistration", typeof(string));
    
            var lastLoginDateParameter = lastLoginDate != null ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTherapist", firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, emailParameter, phoneParameter, dateofRegistrationParameter, lastLoginDateParameter, userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetStudentInformation_Pdf_Result> GetStudentInformation_Pdf(Nullable<int> sid, string fundingCode)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentInformation_Pdf_Result>("GetStudentInformation_Pdf", sidParameter, fundingCodeParameter);
        }
    
        public virtual int ResetTherapistLock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetTherapistLock");
        }
    
        public virtual int Sp_AddMandate(string sID, string nPI, string fiscal, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string frequency, string groupSize, string duration, string language, string fundingCode, string boroCode, string schoolCode, string homeDistrict)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var fiscalParameter = fiscal != null ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var frequencyParameter = frequency != null ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(string));
    
            var groupSizeParameter = groupSize != null ?
                new ObjectParameter("GroupSize", groupSize) :
                new ObjectParameter("GroupSize", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            var boroCodeParameter = boroCode != null ?
                new ObjectParameter("BoroCode", boroCode) :
                new ObjectParameter("BoroCode", typeof(string));
    
            var schoolCodeParameter = schoolCode != null ?
                new ObjectParameter("SchoolCode", schoolCode) :
                new ObjectParameter("SchoolCode", typeof(string));
    
            var homeDistrictParameter = homeDistrict != null ?
                new ObjectParameter("HomeDistrict", homeDistrict) :
                new ObjectParameter("HomeDistrict", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_AddMandate", sIDParameter, nPIParameter, fiscalParameter, startDateParameter, endDateParameter, frequencyParameter, groupSizeParameter, durationParameter, languageParameter, fundingCodeParameter, boroCodeParameter, schoolCodeParameter, homeDistrictParameter);
        }
    
        public virtual int SP_AddUserRole(string tID)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddUserRole", tIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_DeleteSessionByID(string sessionID)
        {
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteSessionByID", sessionIDParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_FindStudent_ByNPI_Result> SP_FindStudent_ByNPI(string nPI, string fisacl)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var fisaclParameter = fisacl != null ?
                new ObjectParameter("Fisacl", fisacl) :
                new ObjectParameter("Fisacl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindStudent_ByNPI_Result>("SP_FindStudent_ByNPI", nPIParameter, fisaclParameter);
        }
    
        public virtual ObjectResult<SP_FindTherapist_ByEmail_Result> SP_FindTherapist_ByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindTherapist_ByEmail_Result>("SP_FindTherapist_ByEmail", emailParameter);
        }
    
        public virtual ObjectResult<SP_FindTherapist_ByFirstName_Result> SP_FindTherapist_ByFirstName(string firstName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindTherapist_ByFirstName_Result>("SP_FindTherapist_ByFirstName", firstNameParameter);
        }
    
        public virtual ObjectResult<SP_FindTherapist_ByLastName_Result> SP_FindTherapist_ByLastName(string lastName)
        {
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindTherapist_ByLastName_Result>("SP_FindTherapist_ByLastName", lastNameParameter);
        }
    
        public virtual ObjectResult<SP_FindTherapist_BySSN_Result> SP_FindTherapist_BySSN(string sSN)
        {
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindTherapist_BySSN_Result>("SP_FindTherapist_BySSN", sSNParameter);
        }
    
        public virtual ObjectResult<SP_FindTherapist_ByTID_Result> SP_FindTherapist_ByTID(string tID)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindTherapist_ByTID_Result>("SP_FindTherapist_ByTID", tIDParameter);
        }
    
        public virtual ObjectResult<SP_FindTherapist_ByUserName_Result> SP_FindTherapist_ByUserName(string userNme)
        {
            var userNmeParameter = userNme != null ?
                new ObjectParameter("UserNme", userNme) :
                new ObjectParameter("UserNme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindTherapist_ByUserName_Result>("SP_FindTherapist_ByUserName", userNmeParameter);
        }
    
        public virtual ObjectResult<SP_FindUser_ByFirstName_Result> SP_FindUser_ByFirstName(string firstName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindUser_ByFirstName_Result>("SP_FindUser_ByFirstName", firstNameParameter);
        }
    
        public virtual ObjectResult<SP_FindUser_ByLastName_Result> SP_FindUser_ByLastName(string lastName)
        {
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindUser_ByLastName_Result>("SP_FindUser_ByLastName", lastNameParameter);
        }
    
        public virtual ObjectResult<SP_FindUser_ByOsis_Result> SP_FindUser_ByOsis(string oSIS)
        {
            var oSISParameter = oSIS != null ?
                new ObjectParameter("OSIS", oSIS) :
                new ObjectParameter("OSIS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindUser_ByOsis_Result>("SP_FindUser_ByOsis", oSISParameter);
        }
    
        public virtual ObjectResult<SP_FindUser_ByUserID_Result> SP_FindUser_ByUserID(string sID)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FindUser_ByUserID_Result>("SP_FindUser_ByUserID", sIDParameter);
        }
    
        public virtual ObjectResult<sp_Generate_Report_Result> sp_Generate_Report(string fundingCode, string fiscalYear, string month)
        {
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Generate_Report_Result>("sp_Generate_Report", fundingCodeParameter, fiscalYearParameter, monthParameter);
        }
    
        public virtual ObjectResult<SP_GenerateReportAsR_Result> SP_GenerateReportAsR(string fundingCode, string fiscalYear, string month)
        {
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateReportAsR_Result>("SP_GenerateReportAsR", fundingCodeParameter, fiscalYearParameter, monthParameter);
        }
    
        public virtual ObjectResult<sp_get_MandateInfo_Result> sp_get_MandateInfo(string sID, string nPI, Nullable<System.DateTime> sdate)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var sdateParameter = sdate.HasValue ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_MandateInfo_Result>("sp_get_MandateInfo", sIDParameter, nPIParameter, sdateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_get_SessionInfo(string sID, Nullable<System.DateTime> sessionDate, string groupSize, string groupType, string tID)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var sessionDateParameter = sessionDate.HasValue ?
                new ObjectParameter("SessionDate", sessionDate) :
                new ObjectParameter("SessionDate", typeof(System.DateTime));
    
            var groupSizeParameter = groupSize != null ?
                new ObjectParameter("GroupSize", groupSize) :
                new ObjectParameter("GroupSize", typeof(string));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_get_SessionInfo", sIDParameter, sessionDateParameter, groupSizeParameter, groupTypeParameter, tIDParameter);
        }
    
        public virtual ObjectResult<sp_get_StudentInfo_Result> sp_get_StudentInfo(string nYCI)
        {
            var nYCIParameter = nYCI != null ?
                new ObjectParameter("NYCI", nYCI) :
                new ObjectParameter("NYCI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_StudentInfo_Result>("sp_get_StudentInfo", nYCIParameter);
        }
    
        public virtual ObjectResult<Sp_get_Therpist_Info_Result> Sp_get_Therpist_Info(string tID)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_get_Therpist_Info_Result>("Sp_get_Therpist_Info", tIDParameter);
        }
    
        public virtual ObjectResult<string> SP_get_user_password(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_get_user_password", userNameParameter);
        }
    
        public virtual ObjectResult<string> SP_get_user_role(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_get_user_role", userNameParameter);
        }
    
        public virtual ObjectResult<SP_GetMandateByID_Result> SP_GetMandateByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMandateByID_Result>("SP_GetMandateByID", iDParameter);
        }
    
        public virtual ObjectResult<SP_GetMandatListByID_Result> SP_GetMandatListByID(string sID)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMandatListByID_Result>("SP_GetMandatListByID", sIDParameter);
        }
    
        public virtual ObjectResult<SP_GetNotMergedList_Result> SP_GetNotMergedList(string fundingCode, string fiscalYear, string month)
        {
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNotMergedList_Result>("SP_GetNotMergedList", fundingCodeParameter, fiscalYearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Sp_GetSessionByID_Result> Sp_GetSessionByID(Nullable<int> sessionID)
        {
            var sessionIDParameter = sessionID.HasValue ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSessionByID_Result>("Sp_GetSessionByID", sessionIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSessionBySID_Result> Sp_GetSessionBySID(string sID, Nullable<System.DateTime> sdate)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var sdateParameter = sdate.HasValue ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSessionBySID_Result>("Sp_GetSessionBySID", sIDParameter, sdateParameter);
        }
    
        public virtual ObjectResult<SP_getSessionList_Result> SP_getSessionList(string startDay, string endDay, string tID)
        {
            var startDayParameter = startDay != null ?
                new ObjectParameter("StartDay", startDay) :
                new ObjectParameter("StartDay", typeof(string));
    
            var endDayParameter = endDay != null ?
                new ObjectParameter("EndDay", endDay) :
                new ObjectParameter("EndDay", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getSessionList_Result>("SP_getSessionList", startDayParameter, endDayParameter, tIDParameter);
        }
    
        public virtual ObjectResult<SP_GetSessionListBySID_Result> SP_GetSessionListBySID(string sID, string tID, string month, string startDay, string endDay, string year)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var startDayParameter = startDay != null ?
                new ObjectParameter("StartDay", startDay) :
                new ObjectParameter("StartDay", typeof(string));
    
            var endDayParameter = endDay != null ?
                new ObjectParameter("EndDay", endDay) :
                new ObjectParameter("EndDay", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSessionListBySID_Result>("SP_GetSessionListBySID", sIDParameter, tIDParameter, monthParameter, startDayParameter, endDayParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_GetStudent_AllInfo_Result> SP_GetStudent_AllInfo(string sID)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetStudent_AllInfo_Result>("SP_GetStudent_AllInfo", sIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentDetail_Result> Sp_GetStudentDetail(string sID)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentDetail_Result>("Sp_GetStudentDetail", sIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentList_Result> Sp_GetStudentList(string nPI)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentList_Result>("Sp_GetStudentList", nPIParameter);
        }
    
        public virtual ObjectResult<SP_GetTherapistInfoByNPI_Result> SP_GetTherapistInfoByNPI(string nPI)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTherapistInfoByNPI_Result>("SP_GetTherapistInfoByNPI", nPIParameter);
        }
    
        public virtual ObjectResult<string> Sp_getTherpist_NPI(string tID)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_getTherpist_NPI", tIDParameter);
        }
    
        public virtual ObjectResult<Sp_getTherpist_SessionInDay_Result> Sp_getTherpist_SessionInDay(Nullable<System.DateTime> sDate, string tID)
        {
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_getTherpist_SessionInDay_Result>("Sp_getTherpist_SessionInDay", sDateParameter, tIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_getUserId(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_getUserId", userNameParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int Sp_Insert_sessionDetail(Nullable<int> sessionID, string sID, string groupSize, Nullable<System.DateTime> sDate, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string location, string tID, string serviceType, string groupType)
        {
            var sessionIDParameter = sessionID.HasValue ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(int));
    
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var groupSizeParameter = groupSize != null ?
                new ObjectParameter("GroupSize", groupSize) :
                new ObjectParameter("GroupSize", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(string));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_sessionDetail", sessionIDParameter, sIDParameter, groupSizeParameter, sDateParameter, startTimeParameter, endTimeParameter, locationParameter, tIDParameter, serviceTypeParameter, groupTypeParameter);
        }
    
        public virtual int SP_NotPSessionAdd(Nullable<int> srNo, Nullable<int> sessionID, string sID, string groupSize, Nullable<System.DateTime> sDate, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string location, string tID, string serviceType, string groupType)
        {
            var srNoParameter = srNo.HasValue ?
                new ObjectParameter("SrNo", srNo) :
                new ObjectParameter("SrNo", typeof(int));
    
            var sessionIDParameter = sessionID.HasValue ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(int));
    
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var groupSizeParameter = groupSize != null ?
                new ObjectParameter("GroupSize", groupSize) :
                new ObjectParameter("GroupSize", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(string));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NotPSessionAdd", srNoParameter, sessionIDParameter, sIDParameter, groupSizeParameter, sDateParameter, startTimeParameter, endTimeParameter, locationParameter, tIDParameter, serviceTypeParameter, groupTypeParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_SessCountByFuningCode_Result> SP_SessCountByFuningCode(string startDay, string endDay, string tID, string fundingCode)
        {
            var startDayParameter = startDay != null ?
                new ObjectParameter("StartDay", startDay) :
                new ObjectParameter("StartDay", typeof(string));
    
            var endDayParameter = endDay != null ?
                new ObjectParameter("EndDay", endDay) :
                new ObjectParameter("EndDay", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SessCountByFuningCode_Result>("SP_SessCountByFuningCode", startDayParameter, endDayParameter, tIDParameter, fundingCodeParameter);
        }
    
        public virtual ObjectResult<SP_SessCountByServiceType_Result> SP_SessCountByServiceType(string startDay, string endDay, string tID, string serviceType)
        {
            var startDayParameter = startDay != null ?
                new ObjectParameter("StartDay", startDay) :
                new ObjectParameter("StartDay", typeof(string));
    
            var endDayParameter = endDay != null ?
                new ObjectParameter("EndDay", endDay) :
                new ObjectParameter("EndDay", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SessCountByServiceType_Result>("SP_SessCountByServiceType", startDayParameter, endDayParameter, tIDParameter, serviceTypeParameter);
        }
    
        public virtual ObjectResult<SP_TherapistList_Result> SP_TherapistList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TherapistList_Result>("SP_TherapistList");
        }
    
        public virtual int sp_Update_LastLogin(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_LastLogin", usernameParameter);
        }
    
        public virtual int SP_Update_MandateByID(string sID, string mID, string nPI, string fiscal, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string frequency, string groupSize, string duration, string language, string fundingCode, string boroCode, string schoolCode, string homeDistrict)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var mIDParameter = mID != null ?
                new ObjectParameter("MID", mID) :
                new ObjectParameter("MID", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var fiscalParameter = fiscal != null ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var frequencyParameter = frequency != null ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(string));
    
            var groupSizeParameter = groupSize != null ?
                new ObjectParameter("GroupSize", groupSize) :
                new ObjectParameter("GroupSize", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            var boroCodeParameter = boroCode != null ?
                new ObjectParameter("BoroCode", boroCode) :
                new ObjectParameter("BoroCode", typeof(string));
    
            var schoolCodeParameter = schoolCode != null ?
                new ObjectParameter("SchoolCode", schoolCode) :
                new ObjectParameter("SchoolCode", typeof(string));
    
            var homeDistrictParameter = homeDistrict != null ?
                new ObjectParameter("HomeDistrict", homeDistrict) :
                new ObjectParameter("HomeDistrict", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_MandateByID", sIDParameter, mIDParameter, nPIParameter, fiscalParameter, startDateParameter, endDateParameter, frequencyParameter, groupSizeParameter, durationParameter, languageParameter, fundingCodeParameter, boroCodeParameter, schoolCodeParameter, homeDistrictParameter);
        }
    
        public virtual int Sp_Update_sessionDetail(string sessionID, string sID, string groupSize, Nullable<System.DateTime> sDate, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string location, string tID, string serviceType, string groupType)
        {
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var groupSizeParameter = groupSize != null ?
                new ObjectParameter("GroupSize", groupSize) :
                new ObjectParameter("GroupSize", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(string));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_sessionDetail", sessionIDParameter, sIDParameter, groupSizeParameter, sDateParameter, startTimeParameter, endTimeParameter, locationParameter, tIDParameter, serviceTypeParameter, groupTypeParameter);
        }
    
        public virtual int SP_UpdateStudentInfo(string sID, string pFirstName, string pLastName, string pHomePh, string pOfficePh, string pMobilPh, string pEmail, string gName, string gEmail, string gMobilPh, string nYCID, string location, string firstName, string lastName, string address1, string dOB, string payType, string referral, string serviceType, string diagnosis, string parentReport, string comments)
        {
            var sIDParameter = sID != null ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(string));
    
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("PFirstName", pFirstName) :
                new ObjectParameter("PFirstName", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("PLastName", pLastName) :
                new ObjectParameter("PLastName", typeof(string));
    
            var pHomePhParameter = pHomePh != null ?
                new ObjectParameter("PHomePh", pHomePh) :
                new ObjectParameter("PHomePh", typeof(string));
    
            var pOfficePhParameter = pOfficePh != null ?
                new ObjectParameter("POfficePh", pOfficePh) :
                new ObjectParameter("POfficePh", typeof(string));
    
            var pMobilPhParameter = pMobilPh != null ?
                new ObjectParameter("PMobilPh", pMobilPh) :
                new ObjectParameter("PMobilPh", typeof(string));
    
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("PEmail", pEmail) :
                new ObjectParameter("PEmail", typeof(string));
    
            var gNameParameter = gName != null ?
                new ObjectParameter("GName", gName) :
                new ObjectParameter("GName", typeof(string));
    
            var gEmailParameter = gEmail != null ?
                new ObjectParameter("GEmail", gEmail) :
                new ObjectParameter("GEmail", typeof(string));
    
            var gMobilPhParameter = gMobilPh != null ?
                new ObjectParameter("GMobilPh", gMobilPh) :
                new ObjectParameter("GMobilPh", typeof(string));
    
            var nYCIDParameter = nYCID != null ?
                new ObjectParameter("NYCID", nYCID) :
                new ObjectParameter("NYCID", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var payTypeParameter = payType != null ?
                new ObjectParameter("PayType", payType) :
                new ObjectParameter("PayType", typeof(string));
    
            var referralParameter = referral != null ?
                new ObjectParameter("Referral", referral) :
                new ObjectParameter("Referral", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(string));
    
            var diagnosisParameter = diagnosis != null ?
                new ObjectParameter("Diagnosis", diagnosis) :
                new ObjectParameter("Diagnosis", typeof(string));
    
            var parentReportParameter = parentReport != null ?
                new ObjectParameter("ParentReport", parentReport) :
                new ObjectParameter("ParentReport", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateStudentInfo", sIDParameter, pFirstNameParameter, pLastNameParameter, pHomePhParameter, pOfficePhParameter, pMobilPhParameter, pEmailParameter, gNameParameter, gEmailParameter, gMobilPhParameter, nYCIDParameter, locationParameter, firstNameParameter, lastNameParameter, address1Parameter, dOBParameter, payTypeParameter, referralParameter, serviceTypeParameter, diagnosisParameter, parentReportParameter, commentsParameter);
        }
    
        public virtual int SP_UpdateTherapistInfo(string tID, string firstName, string lastName, string address1, string address2, string city, string state, string email, string phone, string sSN, string serviceType, string userType)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateTherapistInfo", tIDParameter, firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, emailParameter, phoneParameter, sSNParameter, serviceTypeParameter, userTypeParameter);
        }
    
        public virtual int SP_UpdateTherapistPassword(string tID, string password)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateTherapistPassword", tIDParameter, passwordParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int TruncateStaging()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TruncateStaging");
        }
    
        public virtual int UpadteSessionAsNotRecorded(string srNo)
        {
            var srNoParameter = srNo != null ?
                new ObjectParameter("SrNo", srNo) :
                new ObjectParameter("SrNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpadteSessionAsNotRecorded", srNoParameter);
        }
    
        public virtual int UpadteSessionAsRecorded(string srNo)
        {
            var srNoParameter = srNo != null ?
                new ObjectParameter("SrNo", srNo) :
                new ObjectParameter("SrNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpadteSessionAsRecorded", srNoParameter);
        }
    
        public virtual int UpdateTherapistLock(string tID)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTherapistLock", tIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentListBasedOnFundingCode_Pdf_Result> Sp_GetStudentListBasedOnFundingCode_Pdf(string nPI, string fundingCode)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentListBasedOnFundingCode_Pdf_Result>("Sp_GetStudentListBasedOnFundingCode_Pdf", nPIParameter, fundingCodeParameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentSessionDetail_Pdf_Result> Sp_GetStudentSessionDetail_Pdf(string nPI, string fundingCode, Nullable<int> sID, Nullable<int> year, Nullable<int> month)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var fundingCodeParameter = fundingCode != null ?
                new ObjectParameter("FundingCode", fundingCode) :
                new ObjectParameter("FundingCode", typeof(string));
    
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentSessionDetail_Pdf_Result>("Sp_GetStudentSessionDetail_Pdf", nPIParameter, fundingCodeParameter, sIDParameter, yearParameter, monthParameter);
        }
    }
}
