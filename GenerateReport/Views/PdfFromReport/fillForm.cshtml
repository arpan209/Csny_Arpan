@model GenerateReport.ViewModels.FormGenerateViewModel 
@{
    ViewBag.Title = "fillForm";
}

    @{
        var FiscalList = new List<SelectListItem>();
        int Fiscal = DateTime.Today.Year;
        Fiscal = Fiscal - 2;
        var FiscalItem = new SelectListItem()
        {
            Text = "--Select Fiscal Year--",
            Value = ""
        };
        FiscalList.Add(FiscalItem);
        for (int i = Fiscal; i <= DateTime.Today.Year;i++ )
        {
             FiscalItem = new SelectListItem()
            {
                Text = i.ToString(),
                Value = i.ToString()
            };
             FiscalList.Add(FiscalItem);
        }

        var MonthList = new List<SelectListItem>();
        var monthItem = new SelectListItem() { Text = "Select Month", Value = "" };
        MonthList.Add(monthItem);
        for (int i = 1; i <= 12;i++ )
        {
            DateTime dtDate = new DateTime(DateTime.Now.Year, i, 1);
            monthItem = new SelectListItem()
            {
                Text = dtDate.ToString("MMMM"),
                Value = i.ToString()
            };
            MonthList.Add(monthItem);
        }

        var ReportTypeList = new List<SelectListItem>();
        var ReportType = new SelectListItem() { Text = "-Select-", Value = "" };
        ReportTypeList.Add(ReportType);
        ReportType = new SelectListItem() { Text = "CPSE", Value = "CPSE" };
        ReportTypeList.Add(ReportType);
        ReportType = new SelectListItem() { Text = "CSE", Value = "CSE" };
        ReportTypeList.Add(ReportType);
        
    }

 <script type="text/javascript">
        $(function () {
            $("#ReportType").change(function () {
                var selectedItem = $(this).val();
                var ddlStudent = $("#StudentId");
                var statesProgress = $("#student-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetStudentListBasedOnFundingCode", "PdfFromReport", new  {area="PdfReport" }))",
                    data: { "ReportType": selectedItem, "addEmptyStateIfRequired": "true" },
                    success: function (data) {
                        ddlStudent.html('');
                        $.each(data, function (id, option) {
                            ddlStudent.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Student.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>

<div class="main_content">
<h2>Generate PDF Report</h2>

 @using (Html.BeginForm())
        {
<div>

          <div class="editor-label">
               <strong> @Html.LabelFor(M => M.FiscalYear): </strong>
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(m => m.FiscalYear,FiscalList)
               <span style="color:red;font-size:10px;"> @Html.ValidationMessageFor(m => m.FiscalYear)</span>
            </div>

    <div class="editor-label">
               <strong> @Html.LabelFor(M=>M.FiscalMonth): </strong>
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(m => m.FiscalMonth,MonthList)
               <span style="color:red;font-size:10px;"> @Html.ValidationMessageFor(m => m.FiscalMonth)</span>
            </div>

    <div class="editor-label">
               <strong> @Html.LabelFor(M=>M.ReportType): </strong>
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(m => m.ReportType,ReportTypeList)
               <span style="color:red;font-size:10px;"> @Html.ValidationMessageFor(m => m.ReportType)</span>
            </div>

          <div class="editor-label">
               <strong> @Html.LabelFor(M=>M.StudentId): </strong>
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(m => m.StudentId,Model.StudentList)
                <span id="student-loading-progress" style="display: none;" class="please-wait">Wait...</span>
               <span style="color:red;font-size:10px;"> @Html.ValidationMessageFor(m => m.StudentId)</span>
            </div>
    <div class="editor-label">&nbsp;
                </div>
                <div class="editor-field">
                <input type="submit" value="Generate Report" class="input_button" style="width:135px;"/>
            </div>

</div>
 }
    </div>