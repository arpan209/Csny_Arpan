@model CSNY_timelog.ViewModel.BillingViewModel
@using Telerik.Web;
@using Telerik.Web.Mvc;
@using Telerik.Web.Mvc.UI;
@using GridMvc.Html;

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
   
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
@helper EditSessionLink(CSNY_timelog.ViewModel.SessionCountList item)
{

      
    DateTime TodayDate = DateTime.Today;

    var Count = item.SessionCount;
    //var DataValue = @Model.StartDate+","+@Model.EndDate+","+@Model.Therepist;
   
    if (Count > 0)
    {



        if (item.FundingCode != "")
            {
                    
                    <span >
         @Html.ActionLink(item.FundingCode, "OtherList", "Report", new { id = item.FundingCode.ToString() },new { target = "_blank" })              
                </span>
            }
            else
            {
                 <span >
                   @item.FundingCode      
                </span>
            }
           
        
       
    }
    else{
      <span >
                   @item.FundingCode      
                </span>
    }
        
}
 


@using (Html.BeginForm())
{


 <div class="main_content">
             <div id="Input">
           <div class="page_heading">
             <p>Session List</p>
            </div>
                 <div>
                
                     <br />
                     <b>Therapist Name:</b> @Session["Thername"]
                      <br />
                     <b>Half:</b> @Session["Half"]

                 </div>
      <div style="clear :both;"></div>

       @Html.Grid(Model.SessionCount).Columns(columns =>
  {
      //columns.Add(c => c.Child).Titled("Student ID").RenderValueAs(c => @<span class = "@((!String.IsNullOrEmpty(c.Child)) ? "ColorRed" : "Normal")">@c.Child</span>);
      columns.Add(c => c.FundingCode).SetWidth(25).Titled("Funding Code").Sanitized(false)
          .Encoded(false)
          .RenderValueAs(c => EditSessionLink(c));
         
      
      columns.Add(c => c.Language).Titled("Language").SetWidth(250);
      columns.Add(c => c.SessionCount).Titled("Session Count").SetWidth(50);
      columns.Add(c => c.TotalHours).Titled(" Hours").SetWidth(50);
      //columns.Add(c => c.GroupType).Titled("Funding Code").SetWidth(20);
      //columns.Add(c => c.Group).Titled("Actual <br/> Group <br/> Size").SetWidth(30);
      
  }).WithPaging(100).Sortable(false)

</div>
     <a>&nbsp&nbsp&nbsp   Total Count: @Model.MasterCount</a>
    <a>  &nbsp&nbsp&nbsp       *Total Hours(HH:MM): @Model.MasterHour</a>
        
        <div class="editor-field">                        
                     
                    </div>
      <div style="color:red">
        * Note: Total Hour does <u>not</u> include value of "Other" funding code hours.

    </div>
         
       </div>
   
  <script type="text/javascript">

      function GoToHome() {
          window.history.back();
      }
       </script>

}